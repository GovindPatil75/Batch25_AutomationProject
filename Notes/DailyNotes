7/5/2024
===============================
Automation Testing :

Testing the Application feature with the help of AUtomation tool 

Automation Tool :

Selenium
Protector
Ranorex
Appium - mobile Application test 
Sahi
Sahi Pro

----------------------------
Dis Advantage Manual 

1.required more Resources 
2. time consuming -- Cross Browser Test 
3. Regression Testing -- time consuming and its difficult 
4.Test Cycle duration increase 

Adv Automation Test
------------------------------
1. required less resources
2. required less time -Cross Browser Test
3. regression test - required less time and its easy to perform 
4 .Test Cycle duration decrease

 ==========================================
Why Selenium /Adv Selenium

1. Open source tool /Library
2. no licenece required -- there is no project cost include 
3. support multiple languages -- java ,C#,Python ,pearl ,JavaScript 
4. SUpport multiple Operating System
5. Cross Test is easy to Implement  

Dis Advantages selenium 
------------------------
1. we can automate only Web Application 
   we can not automate Desktop Application .ex .Calculator 
2.we can not handle Captcha and Barcode
3.File uploading and Downloading task we can not handle
  AutoIT tool third party /Robot Class -- 
4.we can do Regression Test but we can not do Adhoc Testing 

====================================================================
Project Eclipse -- Maven Project
Maven - Build Managment Tool 

src/Main/java
src/main/resources
src/test/java
src/test/resources
pom.xml -----------> add depandancy -- jar file 


=================================================================
Selenium WebDriver 

Search Context (I)--extends--WebDriver (I) -Implements--Remote WebDriver (C)-extends--Multiple Browser Driver Classes


-- need executable setup 

---WebDriverManager
========================================
Anything on Webpage -- WebElement  

text field
button
Img Images
logo 
Checkbox 

----------Locators ----> we identify the WebElement 
8 types 

1. Id
2. Name
3. className
4. link text
5. partial link text
6. Xpath 
7. css
8. tagname

WebElement email=driver.findElement(By.id("email"));
email.sendKeys("12345678");
==
========================================

Xpath 

1. Absolute Xpath (/)
parent node start --immidiate child node ---element 

WebElement Email=driver.findElement(By.xpath("/html/body/div[1]/div[1]/div[1]/div/div/div/div[2]/div/div[1]/form/div[1]/div[1]/input"));

2. Relative Xpath (//)

navigate parent node to any child / child node  


1.xpath by attribute
-----------------------
//tagname[@attributename='attribute value']
//input[@id='email']

WebElement email=driver.findElement(By.xpath("//input[@id='email']"));

2.xpath by text()
-------------------------
//tagname[text()='text value']

//a[text()='Forgotten password?']

WebElement FP=driver.findElement(By.xpath("//a[text()='Forgotten password?']"));

3. xpath by contains() 
-----------------------------------
//tagname[contains(@attribute name ,'Static value')]

//button[contains(@id,'u_0_5_')]

driver.findElement(By.xpath("//button[contains(@id,'u_0_5_')]"));

//tagname[contains(text(),'static value text')]

//a[contains(text(),'Forgotten ')]

driver.findElement(By.xpath("//a[contains(text(),'Forgotten ')]"))

4. xpath by Index 
----------------------------
(xpath expression)[index]

(//input[@type='text'])[4]

driver.findElement(By.xpath("(//input[@type='text'])[4]"));







tagname : anything after < this arrow 

 <div
 <input
 <li
 <button
 <a
attribute name
attribute value

attribute name="attribute value "

text :

>text<

>Forgotten password?<

---------------------------------------------
attribute 
//tagname[@attribute name='value']

text()
//tagname[text()='text value']

contains()

//tagname[contains(@attribute name ,'static value')]
//tagname[contains(text(),'partial text value')]

index 
(xpath expression)[index]

===========================================
How to Handle Drop Down 

---------------
tagname ---- < Select  

Select class --- 

// WebElement identify

WebElement DrpElement=driver.findElement(By.xpath("Xpath Expression"));

// create the Object of Select
 Select sel=new Select(DrpElement);

sel.selectbyIndex(4); // 0,1,2,3,4,5
sel.selectbyvalue("value"); 
sel.SelectByVisibiletext("text");

===============================================

full pages Screenshot 

TakesScreenshot ts=driver;
File Src=ts.getscreenshotAs(OutPutType.FILE);
File detsn=new File(location\test.png);
FileHandler.copyFile(Src,detsn);

Element Screenshot 

========================================
mouse Hover and Keyboard related Action - Actions Class

mouse hover +Click 
rightclick+option click
doublclick action 

Drag and Drop 

Copy -Paste

Actions act=new Actions(driver);

drag -- drop 

===========================
ex . webelement - Upper case data send 

TEST
Keys.
down --data enter - up
===================================
Excel sheet -- test data -- test case send 

row ,cell 

sheet -- row ,cell

Apache POI common
Apache POI-ooxml
============================
//Test data -excel
//Dropdown -handle 
// Screenshot full page 

=============================
How to handle Scrolling in Automation 

JavaScriptExecutor js=driver;

//Top to Bottom 
js.executescript("window.scrollBy(0,400)","");

//Bottom to Top
js.executescript("window.scrollBy(0,-400)","");
---------------

Pixel provide 
WebElement

WebElement EnglishUK=driver.findElement(By.xpath("//li[text()='English (UK)']")); 

js.executeScript("arguments[0].scrollIntoView();",EnglishUK);

=======================================================

PopUp Handling 

1. Alert -- How to handle Alert 

  Type of Alert 
  1.Simple Alert  --- warning message -- Button OK
  2.Prompt Alert --- user input accept 
  3.Confirmation Alert  --- ask for the confirmations 
  
  Alert alt=driver.switchto().alert();
  
  alt.gettext(); // Alert text 
  alt.accept(); // Alert OK button
  alt.dismiss(); // Alert Cancel Button 
  alt.sendkeys("user input"); 
  
  ==============================================
  Child Browser window handle
  
  String ParentWID=driver.getwindowhandle(); // String -- Parent window ID
  
  Set<String> ALLID=driver.getwindowhandles(); // Set<String>  Parent window+Child Window ID
  
  
  List<String> list=new ArrayList<String>(ALLID);
  
  list.get(0); // 
  String CWID=list.get(1); //
  
  driver.switchto().window(CWID);
  
  //
  ===============================================
  String ParentWID=driver.getwindowhandle(); // String -- Parent window ID
  
  Set<String> ALLID=driver.getwindowhandles(); // Set<String>  Parent window+Child Window ID
  Case 2:
  
  Iterator<String> IT=ALLID.iterator();
  
  while(IT.hasnext()){
  
    String CWID=IT.next();
    
    if(!ParentWID.equlals(CWID)){
    
    driver.switchto().window(CWID);
    
    
    }
  }
  
  ===================================================
  Iframe /Frame handle 
  
  driver.switchto().frame(index);
  
  driver.switchto().frame(name or ID);
  
  driver.switchto().frame(WebElement element);
  
  Element -action
  
  driver.switchto().deafultcontent();
  
  
  Case 1 : Mainpage --- Frame 1--Frame2 -Frame3 
  
  WebElement element=driver.findELement(By.xpath("//frame[@src='frame_1.html']"));
  
  driver.switchto().frame(element);
  
  Case 2 :
  
  Mainpage --Outterframe --Innerframe
  
  driver.switchto().frame(element);  //Mainpage --Outterframe
  driver.switchto().frame(element) ; //Outterframe --Innerframe
  
  
  driver.switchto().parentframe();  //Innerframe --Outterframe
  driver.switchto().deafultcontent(); //Outterframe-- Mainpage 
  =================================================
  
  TestNG -- Test Managment tool / TestNG Framework 
  
  TC 4
  100 TC
  60 -TC _regression
  40 -TC -Critical Regression
  
  TestNG.xml --Runner file -- we can add multiple test classes 15 *5=75
  
  crossBrowser -- 
  
  Test Report -- html emailable report 
  ===================================================
  
  Annoatation - Tag represent metadata -- additional info JVM and compiler provide
  @Test
  
  Before
  Test
  After
  
  @BeforeSuite
  public void BS(){
    //
  }
  @BeforeTest
  @BeforeClass
  @BeforeMethod
  
  @Test
  @Test
  @Test
  
  @AfterMethod
  @AfterClass
  @AfterTest
  @AfterSuite
  
  ==============================
  10 TC
  3 -TC -CR
  7 -TC -R
  
  =============================
  xyz --- diffrent browser --- chrome ,Edge 
  
  
  public static WebDriver driver;
  
  @Paramters("BrowserName")
  @BeforeMethod
  public void setUp(String BrowserName){
  
  if(BrowserName.equalsignore("Chrome")){
  
  WebDriverMnagaer.chromeDriver().setUp();
  driver=new ChromeDriver();
  
  }
  
  else if(BrowserName.equlsaignorecase("Edge")) {
   
   WebDriverManager.edgeDriver().setup();
   driver=new EdgeDriver();
  }
  
  driver.get(" ");
  driver.manage().window().maximize();
  
  }
  
  @AfterMethod
  public void teardown(){
  
  }
  
  ================================================
  enter email id
  enter password
  click on login button 
  
  -------> Homepage 
  
  String Expectedtitle ="ABC" ;
  String ActualTitle=driver.gettitle(); // XYZ
  
  Assert.assertequls(ActualTitle,Expectedtitle); // Pass -Fail
  
  syso();
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


























